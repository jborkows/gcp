steps:
- name: 'bash'
  id: 'echo'
  args: ['echo', '$PROJECT_ID']  
- name: gcr.io/$PROJECT_ID/snykbuild:0.1
  args: ['sh', '-c', "snyk iac test --json --severity-threshold=high  > /workspace/report$$(date '+%d-%m-%Y').json"]
  dir: 'terraform'      
  secretEnv: ['SNYK_TOKEN']
- name:  gcr.io/$PROJECT_ID/tfsec:0.1
  args: ['sh', '-c', "tfsec .  > /workspace/report_tfsec$$(date '+%d-%m-%Y').txt || true"]
  dir: 'terraform'      
- name: gcr.io/$PROJECT_ID/infracostbuild:$_INFRACOST_VERSION
  args: ["bash", "-c","infracost configure set api_key $$INFRACOST_TOKEN && infracost breakdown --path . 2>&1 /workspace/report_infracost_cost_breakdown$$(date '+%d-%m-%Y').txt"]
  dir: 'terraform'  
  secretEnv: ['INFRACOST_TOKEN']  
# - name: gcr.io/$PROJECT_ID/infracostbuild:$_INFRACOST_VERSION
#   args: ["bash", "-c","infracost breakdown --path . 2>&1 /workspace/report_infracost_cost_breakdown$$(date '+%d-%m-%Y').txt"]
#   dir: 'terraform'   
# - name: gcr.io/$PROJECT_ID/infracostbuild:$_INFRACOST_VERSION
#   args: ["bash", "-c","infracost diff --path . 2>&1 /workspace/report_infracost_cost_breakdown$$(date '+%d-%m-%Y').txt"]  
#   dir: 'terraform'   
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', '/workspace/report*','gs://${PROJECT_ID}_example/']  
- id: "init"
  name: 'gcr.io/$PROJECT_ID/terraformbuild:$_TERRAFORM_VERSION'
  args: ['init']
  dir: 'terraform'
- id: "plan"
  name: 'gcr.io/$PROJECT_ID/terraformbuild:$_TERRAFORM_VERSION'
  args: ['apply','-var=project_id=$PROJECT_ID','-auto-approve']
  dir: 'terraform'
options:
  logging: CLOUD_LOGGING_ONLY
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/snyk-token/versions/1
    env: 'SNYK_TOKEN'
  - versionName: projects/$PROJECT_ID/secrets/infracost-token/versions/1
    env: 'INFRACOST_TOKEN'  
substitutions: 
    _INFRACOST_VERSION: "0.4.1"
    _TERRAFORM_VERSION: "0.1"
     
